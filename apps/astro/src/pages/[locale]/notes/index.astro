---
import { parseISO } from 'date-fns';
import { Center, Container, Divider, Stack, Wrap } from 'styled-system/jsx';
import { formatMonthYear } from 'utils/date';
import { AppPagination } from '~/components/common/AppPagination';
import { Heading } from '~/components/ui/heading';
import { Link } from '~/components/ui/link';
import { Text } from '~/components/ui/text';
import { useTranslations, validateLocale } from '~/i18n/utils';
import MainLayout from '~/layouts/MainLayout.astro';
import { outlineClient } from '~/utils/outline-api';

export const prerender = false;

const PAGE_SIZE = 10;

const { locale } = Astro.params;
const page =
  Astro.url.searchParams.get('page') && !isNaN(Number(Astro.url.searchParams.get('page')))
    ? Number(Astro.url.searchParams.get('page'))
    : 1;

if (!validateLocale(locale)) {
  return Astro.redirect('/404');
}

const headers = {
  Authorization: undefined as unknown as 'Bearer hoge'
};
const t = useTranslations(locale);

const shareRequest = await outlineClient.POST('/shares.list', {
  body: {
    sort: 'createdAt',
    direction: 'DESC',
    limit: PAGE_SIZE,
    offset: (page - 1) * PAGE_SIZE
  },
  headers
});

if (!shareRequest.response.ok) {
  return Astro.redirect('/500');
}

const sharedArticlesList = shareRequest.data?.data;

console.log(shareRequest.data);

Astro.response.headers.set('CDN-Cache-Control', 'public, max-age=86400, must-revalidate');
---

<MainLayout>
  <Container maxW="breakpoint-xl" w="full">
    <Stack py="4" gap="4">
      <Heading as="h1" size="2xl" fontWeight="bold">{t('note.notes')}</Heading>
      <Text>{t('note.description')}</Text>
      {
        sharedArticlesList?.map((data) => {
          if (!data) return null;
          const { id, documentTitle, collectionName, documentSummary, createdAt } =
            data as typeof data & {
              collectionName: string;
              documentSummary: string;
              documentCreatedAt: string;
            };

          return (
            <>
              <Link
                target="_blank"
                href={`${import.meta.env.PRIVATE_OUTLINE_SERVER.replace('/api', '')}/s/${id}`}
              >
                <Stack gap={1}>
                  <Heading as="h4" size="xl" fontWeight="bold">
                    {documentTitle}
                  </Heading>
                  <Wrap fontSize="sm">
                    <Text>{collectionName}</Text> |{' '}
                    <Text>{createdAt ? formatMonthYear(parseISO(createdAt), locale) : null}</Text>
                  </Wrap>
                  <Text>{documentSummary.substring(0, 100) + '...'}</Text>
                </Stack>
              </Link>
              <Divider />
            </>
          );
        })
      }
      <Center>
        {
          shareRequest?.data?.pagination && (
            <AppPagination
              client:visible
              count={shareRequest.data.pagination.total ?? 1}
              page={Math.floor(shareRequest.data.pagination.offset ?? 0 / PAGE_SIZE) + 1}
              pageSize={PAGE_SIZE}
            />
          )
        }
      </Center>
    </Stack>
  </Container>
</MainLayout>
