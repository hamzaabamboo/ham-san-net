---
//TODO:
import { Box, Container, Divider, Stack, styled } from 'styled-system/jsx';
import { getMediaUrl } from 'utils/media';
import { LinkItem } from '~/components/common/LinkItem';
import { Markdown } from '~/components/lib/Markdown';
import { Heading } from '~/components/ui/heading';
import { graphQLSdk } from '~/graphql';
import { ComponentUtilsLink } from '~/graphql/generated/client';
import MainLayout from '~/layouts/MainLayout.astro';

export const prerender = false;

const data = await graphQLSdk.getProjectBySlug({
  slug: Astro.params.slug
});

const { content, title, banner, links } = data?.projects?.data?.[0]?.attributes ?? {};
const { url: bannerPath, name: bannerName } = banner?.data?.attributes ?? {};
const bannerUrl = getMediaUrl(bannerPath, {}, import.meta.env.PUBLIC_API_URL);
---

<MainLayout>
  <Container maxW="breakpoint-xl" py="4">
    <Stack gap="4">
      {
        bannerUrl && (
          <Box rounded="l1" overflow="hidden">
            <styled.img
              src={bannerUrl}
              alt={bannerName ?? title ?? undefined}
              objectFit="cover"
              objectPosition="center"
              width="full"
              aspectRatio="16 / 9"
            />
          </Box>
        )
      }
      <Heading as="h1" size="2xl" fontWeight="bold">{title}</Heading>
      {
        links && (
          <Stack>
            {links
              .filter((l): l is ComponentUtilsLink => !!l)
              .map((l) => {
                return <LinkItem data={l} />;
              })}
          </Stack>
        )
      }
      <Divider />
      {content && <Markdown content={content} assetsPrefix={import.meta.env.PUBLIC_API_URL} />}
    </Stack>
  </Container>
</MainLayout>
