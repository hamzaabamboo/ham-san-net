---
import { languages } from '~/i18n/ui';
import { getLangFromUrl, useTranslations } from '~/i18n/utils';
import { HStack } from '../../../styled-system/jsx';
import { Link } from '../ui/link';
import { Text } from '../ui/text';
import { Sidebar } from './Sidebar';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const getURLWithLanguage = (value: string) => {
  return `/${lang}${value}`;
};

const getCurrentURLWithLanguage = (language: string) => {
  const [, , ...currentPath] = Astro.url.pathname.split('/');
  return `/${language}/${currentPath.join('/')}`;
};

const NAVIGATION_LINKS = [
  // { label: t('common.home'), value: '/' },
  { label: t('common.about-me'), value: '/about' },
  { label: t('common.projects'), value: '/projects' },
  { label: t('common.event'), value: '/events' },
  { label: t('common.hobbies'), value: '/hobbies' },
  { label: t('common.note'), value: '/notes' },
  { label: t('common.contact'), value: '/contact' }
];
---

<HStack
  _print={{ display: 'none' }}
  p={2}
  bgColor="bg.default"
  borderBottom="1px solid"
  borderBottomColor="border.subtle"
  justifyContent="space-between"
  position="sticky"
  top="0"
  zIndex="banner"
>
  <HStack>
    <Link href={getURLWithLanguage('/')}>{t('common.ham')}</Link>
  </HStack>
  <HStack gap="2" hideBelow="sm">
    {
      NAVIGATION_LINKS.map(({ label, value }) => {
        return (
          <Link href={getURLWithLanguage(value)} data-astro-reload>
            {label}
          </Link>
        );
      })
    }
    <Text> | </Text>
    {
      Object.entries(languages)
        .filter((t) => t[0] !== lang)
        .map((t) => {
          return <Link href={getCurrentURLWithLanguage(t[0])}>{t[1]}</Link>;
        })
    }
  </HStack>
  <Sidebar links={NAVIGATION_LINKS} locale={lang} pathname={Astro.url.pathname} client:visible />
</HStack>
